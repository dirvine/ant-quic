name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build ${{ matrix.target }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: ant-quic
            archive: ant-quic-x86_64-linux.tar.gz
          
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: ant-quic
            archive: ant-quic-aarch64-linux.tar.gz
            use-cross: true
          
          # macOS Intel
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: ant-quic
            archive: ant-quic-x86_64-macos.tar.gz
          
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: ant-quic
            archive: ant-quic-aarch64-macos.tar.gz
          
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: ant-quic.exe
            archive: ant-quic-x86_64-windows.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        if: matrix.use-cross == true
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin ant-quic
          else
            cargo build --release --target ${{ matrix.target }} --bin ant-quic
          fi
        shell: bash

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.archive }} ${{ matrix.binary }}
          cd -

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.archive }} ${{ matrix.binary }}
          cd -

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.archive }}
          asset_name: ${{ matrix.archive }}
          asset_content_type: application/octet-stream