name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
      
      - name: Validate version format
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "::error::Invalid version format: $VERSION"
            exit 1
          fi

  test:
    name: Final Tests
    needs: validate
    uses: ./.github/workflows/quick-checks.yml

  build:
    name: Build ${{ matrix.target }}
    needs: [validate, test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: ant-quic
            archive: ant-quic-x86_64-linux.tar.gz
          
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary: ant-quic
            archive: ant-quic-aarch64-linux.tar.gz
            use-cross: true
          
          # macOS Intel
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: ant-quic
            archive: ant-quic-x86_64-macos.tar.gz
          
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: ant-quic
            archive: ant-quic-aarch64-macos.tar.gz
          
          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: ant-quic.exe
            archive: ant-quic-x86_64-windows.zip

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !startsWith(runner.name, 'nektos/act') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        if: matrix.use-cross == true
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build
        run: |
          if [ "${{ matrix.use-cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }} --bin ant-quic
          else
            cargo build --release --target ${{ matrix.target }} --bin ant-quic
          fi
        shell: bash

      - name: Package (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.archive }} ${{ matrix.binary }}
          cd -

      - name: Package (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.archive }} ${{ matrix.binary }}
          cd -

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive }}
          path: ${{ matrix.archive }}
          retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !startsWith(runner.name, 'nektos/act') }}

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## ant-quic Release ${{ github.ref_name }}
            
            ### Installation
            
            Download the appropriate binary for your platform from the assets below.
            
            #### Linux/macOS
            ```bash
            tar -xzf ant-quic-*.tar.gz
            chmod +x ant-quic
            ./ant-quic --help
            ```
            
            #### Windows
            ```powershell
            Expand-Archive ant-quic-*.zip
            .\ant-quic.exe --help
            ```
            
            ### What's Changed
            See the automatically generated release notes below for a complete list of changes.
