name: Version Bump

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
      custom_version:
        description: 'Custom version (overrides bump type)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Determine version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.custom_version }}" ]; then
            VERSION="${{ github.event.inputs.custom_version }}"
            echo "Using custom version: $VERSION"
          else
            # Get current version
            CURRENT=$(grep "^version" Cargo.toml | head -1 | cut -d'"' -f2)
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT"
            
            case "${{ github.event.inputs.bump_type }}" in
              major)
                VERSION="$((MAJOR + 1)).0.0"
                ;;
              minor)
                VERSION="${MAJOR}.$((MINOR + 1)).0"
                ;;
              patch)
                VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
                ;;
            esac
          fi
          
          echo "new_version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Update version
        run: |
          # Update Cargo.toml
          sed -i "s/^version = \".*\"/version = \"${{ steps.version.outputs.new_version }}\"/" Cargo.toml
          
          # Update Cargo.lock
          cargo update --workspace

      - name: Run tests
        run: cargo test --lib

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(release): bump version to ${{ steps.version.outputs.tag }}"
          title: "Release: ${{ steps.version.outputs.tag }}"
          body: |
            ## Version Bump to ${{ steps.version.outputs.tag }}
            
            This PR bumps the version to `${{ steps.version.outputs.new_version }}`.
            
            ### Checklist
            - [ ] All tests pass
            - [ ] CHANGELOG.md is up to date
            - [ ] No breaking changes (or properly documented)
            
            ### Release Process
            Once this PR is merged:
            1. Create and push the tag: `git tag ${{ steps.version.outputs.tag }} && git push origin ${{ steps.version.outputs.tag }}`
            2. The release workflow will automatically trigger
            3. Monitor the release workflow for any issues
            
            ---
            *This PR was automatically generated by the version bump workflow.*
          branch: release/${{ steps.version.outputs.tag }}
          delete-branch: true
          labels: |
            release
            automated
